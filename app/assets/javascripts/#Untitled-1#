/*
Class: Model.Form
Author: William Barry (william@nine.is)
Description: Abstract form class to encapsulate add and edit forms for models.
*/

Model.Form = Class.extend({
    
  class_name: 'Model.Form',
  model: false,
  message: false, 
  adding_message: null,
  deleting_message: null,
  delete_message: null,
  listing_models: false,
  
  init: function(model, params) 

  // Returns the form for adding the model or false for an embedded form.
  add: function() 
  post_add_display: function() {},
  
  // Returns the form for editing a model or false for an embedded form.
  edit: function() 
  post_edit_display: function() {},
  
  listing_view: function()
  post_listing_view_display: function() {},
  
  // Returns a listing table of models or false for an embedded listing
  listing_form: function() 
  post_listing_form_display: function() {},
  
  listing_view: function() 
  post_listing_view_display: function() {},
  
  // Gets the latest rows for the listing
  refresh_listing_models: function(done)
  refresh_listing_models_helper: function(models)
  
  // Returns the values of the add form that will be sent to model.ajax_add 
  add_values: function()

  // Show a confirmation screen
  confirm: function(params)
  
  ajax_success: function(resp)

  ajax_error: function(str) { this.error(str); },

  // Notes
  loading: function(str) { this.show_message('loading'      , str); },
  note:    function(str) { this.show_message('note'         , str); },
  success: function(str) { this.show_message('note success' , str); },
  error:   function(str) { this.show_message('note error'   , str); },
  show_message: function(class_names, str) { $('#' + this.message).empty().append($('<p/>').addClass(class_names).html(str)); }
});
